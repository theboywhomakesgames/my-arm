$date
	Thu Jul 14 22:24:30 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module whole $end
$var wire 32 ! shifter_output [31:0] $end
$var wire 32 " read3 [31:0] $end
$var wire 32 # read2 [31:0] $end
$var wire 32 $ read1 [31:0] $end
$var wire 32 % pc_read [31:0] $end
$var wire 64 & mult_output [63:0] $end
$var wire 32 ' mem_read [31:0] $end
$var wire 1 ( is_immediate $end
$var wire 32 ) incrementerbus [31:0] $end
$var wire 2 * do_special_input [1:0] $end
$var wire 3 + do_shifter_mode [2:0] $end
$var wire 5 , do_shifter_count [4:0] $end
$var wire 1 - do_reg_w $end
$var wire 1 . do_pc_w $end
$var wire 1 / do_mult_hot $end
$var wire 4 0 do_mode [3:0] $end
$var wire 1 1 do_immediate_shift $end
$var wire 1 2 do_aluhot $end
$var wire 1 3 do_ale $end
$var wire 1 4 do_abe $end
$var wire 1 5 do_S $end
$var wire 4 6 do_Rs [3:0] $end
$var wire 4 7 do_Rn [3:0] $end
$var wire 4 8 do_Rm [3:0] $end
$var wire 4 9 do_Rd [3:0] $end
$var wire 1 : clk2 $end
$var wire 1 ; clk1 $end
$var wire 32 < ar [31:0] $end
$var wire 32 = alu_result [31:0] $end
$var wire 3 > alu_logic_idx [2:0] $end
$var wire 1 ? alu_is_logic $end
$var wire 1 @ alu_invert_b $end
$var wire 1 A alu_invert_a $end
$var wire 1 B alu_cin $end
$var wire 1 C alu_Z $end
$var wire 1 D alu_V $end
$var wire 1 E alu_N $end
$var wire 1 F alu_C $end
$var reg 1 G abe $end
$var reg 5 H address1 [4:0] $end
$var reg 5 I address2 [4:0] $end
$var reg 5 J address3 [4:0] $end
$var reg 1 K ale $end
$var reg 1 L alu_active $end
$var reg 1 M alu_done $end
$var reg 32 N alubus [31:0] $end
$var reg 4 O buff_Rd [3:0] $end
$var reg 4 P buff_Rm [3:0] $end
$var reg 4 Q buff_Rn [3:0] $end
$var reg 4 R buff_Rs [3:0] $end
$var reg 4 S buff_mode [3:0] $end
$var reg 32 T busA [31:0] $end
$var reg 32 U busB [31:0] $end
$var reg 1 V clockgen_active $end
$var reg 32 W cpsr_mask [31:0] $end
$var reg 1 X cpsr_w $end
$var reg 32 Y cpsr_write [31:0] $end
$var reg 1 Z decoder_active $end
$var reg 1 [ decoder_full $end
$var reg 1 \ do_availabe $end
$var reg 1 ] done $end
$var reg 1 ^ doubleregsave $end
$var reg 1 _ fetch_done $end
$var reg 5 ` fw_Rd [4:0] $end
$var reg 1 a halted $end
$var reg 32 b instruction [31:0] $end
$var reg 32 c instruction_dec [31:0] $end
$var reg 32 d instruction_exec [31:0] $end
$var reg 32 e mem_address [31:0] $end
$var reg 1 f mem_done $end
$var reg 32 g mem_mask [31:0] $end
$var reg 1 h mem_w $end
$var reg 32 i mem_write [31:0] $end
$var reg 32 j mult_input_1 [31:0] $end
$var reg 32 k mult_input_2 [31:0] $end
$var reg 32 l one [31:0] $end
$var reg 1 m pc_increment $end
$var reg 1 n pc_w $end
$var reg 32 o pc_write [31:0] $end
$var reg 1 p reg_w $end
$var reg 32 q reg_write [31:0] $end
$var reg 1 r regbank_active $end
$var reg 1 s regbank_donereading $end
$var reg 5 t shifter_count [4:0] $end
$var reg 3 u shifter_mode [2:0] $end
$var reg 1 v t_clk1 $end
$var reg 1 w t_clk2 $end
$var reg 1 x test_clkactive $end
$var reg 1 y valid_fw $end
$var reg 32 z zero [31:0] $end
$var integer 32 { runs [31:0] $end
$scope module alumodule $end
$var wire 32 | a [31:0] $end
$var wire 1 L isactive $end
$var wire 3 } logic_func_idx [2:0] $end
$var wire 32 ~ lfresult [31:0] $end
$var wire 1 ? is_logic $end
$var wire 32 !" inverted_b [31:0] $end
$var wire 32 "" inverted_a [31:0] $end
$var wire 1 @ invert_b $end
$var wire 1 A invert_a $end
$var wire 1 B cin $end
$var wire 32 #" b [31:0] $end
$var wire 32 $" adderresult [31:0] $end
$var wire 1 F C $end
$var reg 1 E N $end
$var reg 1 D V $end
$var reg 1 C Z $end
$var reg 32 %" adder_a [31:0] $end
$var reg 32 &" adder_b [31:0] $end
$var reg 32 '" inverter [31:0] $end
$var reg 32 (" lf_a [31:0] $end
$var reg 32 )" lf_b [31:0] $end
$var reg 32 *" result [31:0] $end
$scope module a_inverter $end
$var wire 32 +" a [31:0] $end
$var wire 32 ," b [31:0] $end
$var wire 32 -" o [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 ." i $end
$scope module w_xor $end
$var wire 1 /" i1 $end
$var wire 1 0" i2 $end
$var wire 1 1" o $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 2" i $end
$scope module w_xor $end
$var wire 1 3" i1 $end
$var wire 1 4" i2 $end
$var wire 1 5" o $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 6" i $end
$scope module w_xor $end
$var wire 1 7" i1 $end
$var wire 1 8" i2 $end
$var wire 1 9" o $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 :" i $end
$scope module w_xor $end
$var wire 1 ;" i1 $end
$var wire 1 <" i2 $end
$var wire 1 =" o $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 >" i $end
$scope module w_xor $end
$var wire 1 ?" i1 $end
$var wire 1 @" i2 $end
$var wire 1 A" o $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 B" i $end
$scope module w_xor $end
$var wire 1 C" i1 $end
$var wire 1 D" i2 $end
$var wire 1 E" o $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 F" i $end
$scope module w_xor $end
$var wire 1 G" i1 $end
$var wire 1 H" i2 $end
$var wire 1 I" o $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 J" i $end
$scope module w_xor $end
$var wire 1 K" i1 $end
$var wire 1 L" i2 $end
$var wire 1 M" o $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 N" i $end
$scope module w_xor $end
$var wire 1 O" i1 $end
$var wire 1 P" i2 $end
$var wire 1 Q" o $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 R" i $end
$scope module w_xor $end
$var wire 1 S" i1 $end
$var wire 1 T" i2 $end
$var wire 1 U" o $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 V" i $end
$scope module w_xor $end
$var wire 1 W" i1 $end
$var wire 1 X" i2 $end
$var wire 1 Y" o $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 Z" i $end
$scope module w_xor $end
$var wire 1 [" i1 $end
$var wire 1 \" i2 $end
$var wire 1 ]" o $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 ^" i $end
$scope module w_xor $end
$var wire 1 _" i1 $end
$var wire 1 `" i2 $end
$var wire 1 a" o $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 b" i $end
$scope module w_xor $end
$var wire 1 c" i1 $end
$var wire 1 d" i2 $end
$var wire 1 e" o $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 f" i $end
$scope module w_xor $end
$var wire 1 g" i1 $end
$var wire 1 h" i2 $end
$var wire 1 i" o $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 j" i $end
$scope module w_xor $end
$var wire 1 k" i1 $end
$var wire 1 l" i2 $end
$var wire 1 m" o $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 n" i $end
$scope module w_xor $end
$var wire 1 o" i1 $end
$var wire 1 p" i2 $end
$var wire 1 q" o $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 r" i $end
$scope module w_xor $end
$var wire 1 s" i1 $end
$var wire 1 t" i2 $end
$var wire 1 u" o $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 v" i $end
$scope module w_xor $end
$var wire 1 w" i1 $end
$var wire 1 x" i2 $end
$var wire 1 y" o $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 z" i $end
$scope module w_xor $end
$var wire 1 {" i1 $end
$var wire 1 |" i2 $end
$var wire 1 }" o $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 ~" i $end
$scope module w_xor $end
$var wire 1 !# i1 $end
$var wire 1 "# i2 $end
$var wire 1 ## o $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 $# i $end
$scope module w_xor $end
$var wire 1 %# i1 $end
$var wire 1 &# i2 $end
$var wire 1 '# o $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 (# i $end
$scope module w_xor $end
$var wire 1 )# i1 $end
$var wire 1 *# i2 $end
$var wire 1 +# o $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 ,# i $end
$scope module w_xor $end
$var wire 1 -# i1 $end
$var wire 1 .# i2 $end
$var wire 1 /# o $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 0# i $end
$scope module w_xor $end
$var wire 1 1# i1 $end
$var wire 1 2# i2 $end
$var wire 1 3# o $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 4# i $end
$scope module w_xor $end
$var wire 1 5# i1 $end
$var wire 1 6# i2 $end
$var wire 1 7# o $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 8# i $end
$scope module w_xor $end
$var wire 1 9# i1 $end
$var wire 1 :# i2 $end
$var wire 1 ;# o $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 <# i $end
$scope module w_xor $end
$var wire 1 =# i1 $end
$var wire 1 ># i2 $end
$var wire 1 ?# o $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 @# i $end
$scope module w_xor $end
$var wire 1 A# i1 $end
$var wire 1 B# i2 $end
$var wire 1 C# o $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 D# i $end
$scope module w_xor $end
$var wire 1 E# i1 $end
$var wire 1 F# i2 $end
$var wire 1 G# o $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 H# i $end
$scope module w_xor $end
$var wire 1 I# i1 $end
$var wire 1 J# i2 $end
$var wire 1 K# o $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 L# i $end
$scope module w_xor $end
$var wire 1 M# i1 $end
$var wire 1 N# i2 $end
$var wire 1 O# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder $end
$var wire 32 P# a [31:0] $end
$var wire 32 Q# b [31:0] $end
$var wire 32 R# result [31:0] $end
$var wire 1 F cout $end
$var wire 1 B cin $end
$var wire 32 S# carries [31:0] $end
$scope begin genblk1[1] $end
$var parameter 2 T# i $end
$scope module fa $end
$var wire 1 U# a $end
$var wire 1 V# b $end
$var wire 1 W# c $end
$var wire 1 X# xorout $end
$var wire 1 Y# result $end
$var wire 1 Z# cout $end
$var wire 1 [# and2out $end
$var wire 1 \# and1out $end
$scope module w_and1 $end
$var wire 1 U# i1 $end
$var wire 1 V# i2 $end
$var wire 1 \# o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 W# i1 $end
$var wire 1 [# o $end
$var wire 1 X# i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 \# i1 $end
$var wire 1 [# i2 $end
$var wire 1 Z# o $end
$upscope $end
$scope module w_xor $end
$var wire 1 U# i1 $end
$var wire 1 V# i2 $end
$var wire 1 X# o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 X# i1 $end
$var wire 1 W# i2 $end
$var wire 1 Y# o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 ]# i $end
$scope module fa $end
$var wire 1 ^# a $end
$var wire 1 _# b $end
$var wire 1 `# c $end
$var wire 1 a# xorout $end
$var wire 1 b# result $end
$var wire 1 c# cout $end
$var wire 1 d# and2out $end
$var wire 1 e# and1out $end
$scope module w_and1 $end
$var wire 1 ^# i1 $end
$var wire 1 _# i2 $end
$var wire 1 e# o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 `# i1 $end
$var wire 1 d# o $end
$var wire 1 a# i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 e# i1 $end
$var wire 1 d# i2 $end
$var wire 1 c# o $end
$upscope $end
$scope module w_xor $end
$var wire 1 ^# i1 $end
$var wire 1 _# i2 $end
$var wire 1 a# o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 a# i1 $end
$var wire 1 `# i2 $end
$var wire 1 b# o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 f# i $end
$scope module fa $end
$var wire 1 g# a $end
$var wire 1 h# b $end
$var wire 1 i# c $end
$var wire 1 j# xorout $end
$var wire 1 k# result $end
$var wire 1 l# cout $end
$var wire 1 m# and2out $end
$var wire 1 n# and1out $end
$scope module w_and1 $end
$var wire 1 g# i1 $end
$var wire 1 h# i2 $end
$var wire 1 n# o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 i# i1 $end
$var wire 1 m# o $end
$var wire 1 j# i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 n# i1 $end
$var wire 1 m# i2 $end
$var wire 1 l# o $end
$upscope $end
$scope module w_xor $end
$var wire 1 g# i1 $end
$var wire 1 h# i2 $end
$var wire 1 j# o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 j# i1 $end
$var wire 1 i# i2 $end
$var wire 1 k# o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 o# i $end
$scope module fa $end
$var wire 1 p# a $end
$var wire 1 q# b $end
$var wire 1 r# c $end
$var wire 1 s# xorout $end
$var wire 1 t# result $end
$var wire 1 u# cout $end
$var wire 1 v# and2out $end
$var wire 1 w# and1out $end
$scope module w_and1 $end
$var wire 1 p# i1 $end
$var wire 1 q# i2 $end
$var wire 1 w# o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 r# i1 $end
$var wire 1 v# o $end
$var wire 1 s# i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 w# i1 $end
$var wire 1 v# i2 $end
$var wire 1 u# o $end
$upscope $end
$scope module w_xor $end
$var wire 1 p# i1 $end
$var wire 1 q# i2 $end
$var wire 1 s# o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 s# i1 $end
$var wire 1 r# i2 $end
$var wire 1 t# o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 x# i $end
$scope module fa $end
$var wire 1 y# a $end
$var wire 1 z# b $end
$var wire 1 {# c $end
$var wire 1 |# xorout $end
$var wire 1 }# result $end
$var wire 1 ~# cout $end
$var wire 1 !$ and2out $end
$var wire 1 "$ and1out $end
$scope module w_and1 $end
$var wire 1 y# i1 $end
$var wire 1 z# i2 $end
$var wire 1 "$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 {# i1 $end
$var wire 1 !$ o $end
$var wire 1 |# i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 "$ i1 $end
$var wire 1 !$ i2 $end
$var wire 1 ~# o $end
$upscope $end
$scope module w_xor $end
$var wire 1 y# i1 $end
$var wire 1 z# i2 $end
$var wire 1 |# o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 |# i1 $end
$var wire 1 {# i2 $end
$var wire 1 }# o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 #$ i $end
$scope module fa $end
$var wire 1 $$ a $end
$var wire 1 %$ b $end
$var wire 1 &$ c $end
$var wire 1 '$ xorout $end
$var wire 1 ($ result $end
$var wire 1 )$ cout $end
$var wire 1 *$ and2out $end
$var wire 1 +$ and1out $end
$scope module w_and1 $end
$var wire 1 $$ i1 $end
$var wire 1 %$ i2 $end
$var wire 1 +$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 &$ i1 $end
$var wire 1 *$ o $end
$var wire 1 '$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 +$ i1 $end
$var wire 1 *$ i2 $end
$var wire 1 )$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 $$ i1 $end
$var wire 1 %$ i2 $end
$var wire 1 '$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 '$ i1 $end
$var wire 1 &$ i2 $end
$var wire 1 ($ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 ,$ i $end
$scope module fa $end
$var wire 1 -$ a $end
$var wire 1 .$ b $end
$var wire 1 /$ c $end
$var wire 1 0$ xorout $end
$var wire 1 1$ result $end
$var wire 1 2$ cout $end
$var wire 1 3$ and2out $end
$var wire 1 4$ and1out $end
$scope module w_and1 $end
$var wire 1 -$ i1 $end
$var wire 1 .$ i2 $end
$var wire 1 4$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 /$ i1 $end
$var wire 1 3$ o $end
$var wire 1 0$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 4$ i1 $end
$var wire 1 3$ i2 $end
$var wire 1 2$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 -$ i1 $end
$var wire 1 .$ i2 $end
$var wire 1 0$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 0$ i1 $end
$var wire 1 /$ i2 $end
$var wire 1 1$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 5$ i $end
$scope module fa $end
$var wire 1 6$ a $end
$var wire 1 7$ b $end
$var wire 1 8$ c $end
$var wire 1 9$ xorout $end
$var wire 1 :$ result $end
$var wire 1 ;$ cout $end
$var wire 1 <$ and2out $end
$var wire 1 =$ and1out $end
$scope module w_and1 $end
$var wire 1 6$ i1 $end
$var wire 1 7$ i2 $end
$var wire 1 =$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 8$ i1 $end
$var wire 1 <$ o $end
$var wire 1 9$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 =$ i1 $end
$var wire 1 <$ i2 $end
$var wire 1 ;$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 6$ i1 $end
$var wire 1 7$ i2 $end
$var wire 1 9$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 9$ i1 $end
$var wire 1 8$ i2 $end
$var wire 1 :$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 >$ i $end
$scope module fa $end
$var wire 1 ?$ a $end
$var wire 1 @$ b $end
$var wire 1 A$ c $end
$var wire 1 B$ xorout $end
$var wire 1 C$ result $end
$var wire 1 D$ cout $end
$var wire 1 E$ and2out $end
$var wire 1 F$ and1out $end
$scope module w_and1 $end
$var wire 1 ?$ i1 $end
$var wire 1 @$ i2 $end
$var wire 1 F$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 A$ i1 $end
$var wire 1 E$ o $end
$var wire 1 B$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 F$ i1 $end
$var wire 1 E$ i2 $end
$var wire 1 D$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 ?$ i1 $end
$var wire 1 @$ i2 $end
$var wire 1 B$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 B$ i1 $end
$var wire 1 A$ i2 $end
$var wire 1 C$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 G$ i $end
$scope module fa $end
$var wire 1 H$ a $end
$var wire 1 I$ b $end
$var wire 1 J$ c $end
$var wire 1 K$ xorout $end
$var wire 1 L$ result $end
$var wire 1 M$ cout $end
$var wire 1 N$ and2out $end
$var wire 1 O$ and1out $end
$scope module w_and1 $end
$var wire 1 H$ i1 $end
$var wire 1 I$ i2 $end
$var wire 1 O$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 J$ i1 $end
$var wire 1 N$ o $end
$var wire 1 K$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 O$ i1 $end
$var wire 1 N$ i2 $end
$var wire 1 M$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 H$ i1 $end
$var wire 1 I$ i2 $end
$var wire 1 K$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 K$ i1 $end
$var wire 1 J$ i2 $end
$var wire 1 L$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 P$ i $end
$scope module fa $end
$var wire 1 Q$ a $end
$var wire 1 R$ b $end
$var wire 1 S$ c $end
$var wire 1 T$ xorout $end
$var wire 1 U$ result $end
$var wire 1 V$ cout $end
$var wire 1 W$ and2out $end
$var wire 1 X$ and1out $end
$scope module w_and1 $end
$var wire 1 Q$ i1 $end
$var wire 1 R$ i2 $end
$var wire 1 X$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 S$ i1 $end
$var wire 1 W$ o $end
$var wire 1 T$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 X$ i1 $end
$var wire 1 W$ i2 $end
$var wire 1 V$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 Q$ i1 $end
$var wire 1 R$ i2 $end
$var wire 1 T$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 T$ i1 $end
$var wire 1 S$ i2 $end
$var wire 1 U$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 Y$ i $end
$scope module fa $end
$var wire 1 Z$ a $end
$var wire 1 [$ b $end
$var wire 1 \$ c $end
$var wire 1 ]$ xorout $end
$var wire 1 ^$ result $end
$var wire 1 _$ cout $end
$var wire 1 `$ and2out $end
$var wire 1 a$ and1out $end
$scope module w_and1 $end
$var wire 1 Z$ i1 $end
$var wire 1 [$ i2 $end
$var wire 1 a$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 \$ i1 $end
$var wire 1 `$ o $end
$var wire 1 ]$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 a$ i1 $end
$var wire 1 `$ i2 $end
$var wire 1 _$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 Z$ i1 $end
$var wire 1 [$ i2 $end
$var wire 1 ]$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 ]$ i1 $end
$var wire 1 \$ i2 $end
$var wire 1 ^$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 b$ i $end
$scope module fa $end
$var wire 1 c$ a $end
$var wire 1 d$ b $end
$var wire 1 e$ c $end
$var wire 1 f$ xorout $end
$var wire 1 g$ result $end
$var wire 1 h$ cout $end
$var wire 1 i$ and2out $end
$var wire 1 j$ and1out $end
$scope module w_and1 $end
$var wire 1 c$ i1 $end
$var wire 1 d$ i2 $end
$var wire 1 j$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 e$ i1 $end
$var wire 1 i$ o $end
$var wire 1 f$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 j$ i1 $end
$var wire 1 i$ i2 $end
$var wire 1 h$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 c$ i1 $end
$var wire 1 d$ i2 $end
$var wire 1 f$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 f$ i1 $end
$var wire 1 e$ i2 $end
$var wire 1 g$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 k$ i $end
$scope module fa $end
$var wire 1 l$ a $end
$var wire 1 m$ b $end
$var wire 1 n$ c $end
$var wire 1 o$ xorout $end
$var wire 1 p$ result $end
$var wire 1 q$ cout $end
$var wire 1 r$ and2out $end
$var wire 1 s$ and1out $end
$scope module w_and1 $end
$var wire 1 l$ i1 $end
$var wire 1 m$ i2 $end
$var wire 1 s$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 n$ i1 $end
$var wire 1 r$ o $end
$var wire 1 o$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 s$ i1 $end
$var wire 1 r$ i2 $end
$var wire 1 q$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 l$ i1 $end
$var wire 1 m$ i2 $end
$var wire 1 o$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 o$ i1 $end
$var wire 1 n$ i2 $end
$var wire 1 p$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 t$ i $end
$scope module fa $end
$var wire 1 u$ a $end
$var wire 1 v$ b $end
$var wire 1 w$ c $end
$var wire 1 x$ xorout $end
$var wire 1 y$ result $end
$var wire 1 z$ cout $end
$var wire 1 {$ and2out $end
$var wire 1 |$ and1out $end
$scope module w_and1 $end
$var wire 1 u$ i1 $end
$var wire 1 v$ i2 $end
$var wire 1 |$ o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 w$ i1 $end
$var wire 1 {$ o $end
$var wire 1 x$ i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 |$ i1 $end
$var wire 1 {$ i2 $end
$var wire 1 z$ o $end
$upscope $end
$scope module w_xor $end
$var wire 1 u$ i1 $end
$var wire 1 v$ i2 $end
$var wire 1 x$ o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 x$ i1 $end
$var wire 1 w$ i2 $end
$var wire 1 y$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 }$ i $end
$scope module fa $end
$var wire 1 ~$ a $end
$var wire 1 !% b $end
$var wire 1 "% c $end
$var wire 1 #% xorout $end
$var wire 1 $% result $end
$var wire 1 %% cout $end
$var wire 1 &% and2out $end
$var wire 1 '% and1out $end
$scope module w_and1 $end
$var wire 1 ~$ i1 $end
$var wire 1 !% i2 $end
$var wire 1 '% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 "% i1 $end
$var wire 1 &% o $end
$var wire 1 #% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 '% i1 $end
$var wire 1 &% i2 $end
$var wire 1 %% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 ~$ i1 $end
$var wire 1 !% i2 $end
$var wire 1 #% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 #% i1 $end
$var wire 1 "% i2 $end
$var wire 1 $% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 (% i $end
$scope module fa $end
$var wire 1 )% a $end
$var wire 1 *% b $end
$var wire 1 +% c $end
$var wire 1 ,% xorout $end
$var wire 1 -% result $end
$var wire 1 .% cout $end
$var wire 1 /% and2out $end
$var wire 1 0% and1out $end
$scope module w_and1 $end
$var wire 1 )% i1 $end
$var wire 1 *% i2 $end
$var wire 1 0% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 +% i1 $end
$var wire 1 /% o $end
$var wire 1 ,% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 0% i1 $end
$var wire 1 /% i2 $end
$var wire 1 .% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 )% i1 $end
$var wire 1 *% i2 $end
$var wire 1 ,% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 ,% i1 $end
$var wire 1 +% i2 $end
$var wire 1 -% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 1% i $end
$scope module fa $end
$var wire 1 2% a $end
$var wire 1 3% b $end
$var wire 1 4% c $end
$var wire 1 5% xorout $end
$var wire 1 6% result $end
$var wire 1 7% cout $end
$var wire 1 8% and2out $end
$var wire 1 9% and1out $end
$scope module w_and1 $end
$var wire 1 2% i1 $end
$var wire 1 3% i2 $end
$var wire 1 9% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 4% i1 $end
$var wire 1 8% o $end
$var wire 1 5% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 9% i1 $end
$var wire 1 8% i2 $end
$var wire 1 7% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 2% i1 $end
$var wire 1 3% i2 $end
$var wire 1 5% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 5% i1 $end
$var wire 1 4% i2 $end
$var wire 1 6% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 :% i $end
$scope module fa $end
$var wire 1 ;% a $end
$var wire 1 <% b $end
$var wire 1 =% c $end
$var wire 1 >% xorout $end
$var wire 1 ?% result $end
$var wire 1 @% cout $end
$var wire 1 A% and2out $end
$var wire 1 B% and1out $end
$scope module w_and1 $end
$var wire 1 ;% i1 $end
$var wire 1 <% i2 $end
$var wire 1 B% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 =% i1 $end
$var wire 1 A% o $end
$var wire 1 >% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 B% i1 $end
$var wire 1 A% i2 $end
$var wire 1 @% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 ;% i1 $end
$var wire 1 <% i2 $end
$var wire 1 >% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 >% i1 $end
$var wire 1 =% i2 $end
$var wire 1 ?% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 C% i $end
$scope module fa $end
$var wire 1 D% a $end
$var wire 1 E% b $end
$var wire 1 F% c $end
$var wire 1 G% xorout $end
$var wire 1 H% result $end
$var wire 1 I% cout $end
$var wire 1 J% and2out $end
$var wire 1 K% and1out $end
$scope module w_and1 $end
$var wire 1 D% i1 $end
$var wire 1 E% i2 $end
$var wire 1 K% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 F% i1 $end
$var wire 1 J% o $end
$var wire 1 G% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 K% i1 $end
$var wire 1 J% i2 $end
$var wire 1 I% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 D% i1 $end
$var wire 1 E% i2 $end
$var wire 1 G% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 G% i1 $end
$var wire 1 F% i2 $end
$var wire 1 H% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 L% i $end
$scope module fa $end
$var wire 1 M% a $end
$var wire 1 N% b $end
$var wire 1 O% c $end
$var wire 1 P% xorout $end
$var wire 1 Q% result $end
$var wire 1 R% cout $end
$var wire 1 S% and2out $end
$var wire 1 T% and1out $end
$scope module w_and1 $end
$var wire 1 M% i1 $end
$var wire 1 N% i2 $end
$var wire 1 T% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 O% i1 $end
$var wire 1 S% o $end
$var wire 1 P% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 T% i1 $end
$var wire 1 S% i2 $end
$var wire 1 R% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 M% i1 $end
$var wire 1 N% i2 $end
$var wire 1 P% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 P% i1 $end
$var wire 1 O% i2 $end
$var wire 1 Q% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 U% i $end
$scope module fa $end
$var wire 1 V% a $end
$var wire 1 W% b $end
$var wire 1 X% c $end
$var wire 1 Y% xorout $end
$var wire 1 Z% result $end
$var wire 1 [% cout $end
$var wire 1 \% and2out $end
$var wire 1 ]% and1out $end
$scope module w_and1 $end
$var wire 1 V% i1 $end
$var wire 1 W% i2 $end
$var wire 1 ]% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 X% i1 $end
$var wire 1 \% o $end
$var wire 1 Y% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 ]% i1 $end
$var wire 1 \% i2 $end
$var wire 1 [% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 V% i1 $end
$var wire 1 W% i2 $end
$var wire 1 Y% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 Y% i1 $end
$var wire 1 X% i2 $end
$var wire 1 Z% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 ^% i $end
$scope module fa $end
$var wire 1 _% a $end
$var wire 1 `% b $end
$var wire 1 a% c $end
$var wire 1 b% xorout $end
$var wire 1 c% result $end
$var wire 1 d% cout $end
$var wire 1 e% and2out $end
$var wire 1 f% and1out $end
$scope module w_and1 $end
$var wire 1 _% i1 $end
$var wire 1 `% i2 $end
$var wire 1 f% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 a% i1 $end
$var wire 1 e% o $end
$var wire 1 b% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 f% i1 $end
$var wire 1 e% i2 $end
$var wire 1 d% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 _% i1 $end
$var wire 1 `% i2 $end
$var wire 1 b% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 b% i1 $end
$var wire 1 a% i2 $end
$var wire 1 c% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 g% i $end
$scope module fa $end
$var wire 1 h% a $end
$var wire 1 i% b $end
$var wire 1 j% c $end
$var wire 1 k% xorout $end
$var wire 1 l% result $end
$var wire 1 m% cout $end
$var wire 1 n% and2out $end
$var wire 1 o% and1out $end
$scope module w_and1 $end
$var wire 1 h% i1 $end
$var wire 1 i% i2 $end
$var wire 1 o% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 j% i1 $end
$var wire 1 n% o $end
$var wire 1 k% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 o% i1 $end
$var wire 1 n% i2 $end
$var wire 1 m% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 h% i1 $end
$var wire 1 i% i2 $end
$var wire 1 k% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 k% i1 $end
$var wire 1 j% i2 $end
$var wire 1 l% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 p% i $end
$scope module fa $end
$var wire 1 q% a $end
$var wire 1 r% b $end
$var wire 1 s% c $end
$var wire 1 t% xorout $end
$var wire 1 u% result $end
$var wire 1 v% cout $end
$var wire 1 w% and2out $end
$var wire 1 x% and1out $end
$scope module w_and1 $end
$var wire 1 q% i1 $end
$var wire 1 r% i2 $end
$var wire 1 x% o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 s% i1 $end
$var wire 1 w% o $end
$var wire 1 t% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 x% i1 $end
$var wire 1 w% i2 $end
$var wire 1 v% o $end
$upscope $end
$scope module w_xor $end
$var wire 1 q% i1 $end
$var wire 1 r% i2 $end
$var wire 1 t% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 t% i1 $end
$var wire 1 s% i2 $end
$var wire 1 u% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 y% i $end
$scope module fa $end
$var wire 1 z% a $end
$var wire 1 {% b $end
$var wire 1 |% c $end
$var wire 1 }% xorout $end
$var wire 1 ~% result $end
$var wire 1 !& cout $end
$var wire 1 "& and2out $end
$var wire 1 #& and1out $end
$scope module w_and1 $end
$var wire 1 z% i1 $end
$var wire 1 {% i2 $end
$var wire 1 #& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 |% i1 $end
$var wire 1 "& o $end
$var wire 1 }% i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 #& i1 $end
$var wire 1 "& i2 $end
$var wire 1 !& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 z% i1 $end
$var wire 1 {% i2 $end
$var wire 1 }% o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 }% i1 $end
$var wire 1 |% i2 $end
$var wire 1 ~% o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 $& i $end
$scope module fa $end
$var wire 1 %& a $end
$var wire 1 && b $end
$var wire 1 '& c $end
$var wire 1 (& xorout $end
$var wire 1 )& result $end
$var wire 1 *& cout $end
$var wire 1 +& and2out $end
$var wire 1 ,& and1out $end
$scope module w_and1 $end
$var wire 1 %& i1 $end
$var wire 1 && i2 $end
$var wire 1 ,& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 '& i1 $end
$var wire 1 +& o $end
$var wire 1 (& i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 ,& i1 $end
$var wire 1 +& i2 $end
$var wire 1 *& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 %& i1 $end
$var wire 1 && i2 $end
$var wire 1 (& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 (& i1 $end
$var wire 1 '& i2 $end
$var wire 1 )& o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 -& i $end
$scope module fa $end
$var wire 1 .& a $end
$var wire 1 /& b $end
$var wire 1 0& c $end
$var wire 1 1& xorout $end
$var wire 1 2& result $end
$var wire 1 3& cout $end
$var wire 1 4& and2out $end
$var wire 1 5& and1out $end
$scope module w_and1 $end
$var wire 1 .& i1 $end
$var wire 1 /& i2 $end
$var wire 1 5& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 0& i1 $end
$var wire 1 4& o $end
$var wire 1 1& i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 5& i1 $end
$var wire 1 4& i2 $end
$var wire 1 3& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 .& i1 $end
$var wire 1 /& i2 $end
$var wire 1 1& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 1& i1 $end
$var wire 1 0& i2 $end
$var wire 1 2& o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 6& i $end
$scope module fa $end
$var wire 1 7& a $end
$var wire 1 8& b $end
$var wire 1 9& c $end
$var wire 1 :& xorout $end
$var wire 1 ;& result $end
$var wire 1 <& cout $end
$var wire 1 =& and2out $end
$var wire 1 >& and1out $end
$scope module w_and1 $end
$var wire 1 7& i1 $end
$var wire 1 8& i2 $end
$var wire 1 >& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 9& i1 $end
$var wire 1 =& o $end
$var wire 1 :& i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 >& i1 $end
$var wire 1 =& i2 $end
$var wire 1 <& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 7& i1 $end
$var wire 1 8& i2 $end
$var wire 1 :& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 :& i1 $end
$var wire 1 9& i2 $end
$var wire 1 ;& o $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 ?& i $end
$scope module fa $end
$var wire 1 @& a $end
$var wire 1 A& b $end
$var wire 1 B& c $end
$var wire 1 C& xorout $end
$var wire 1 D& result $end
$var wire 1 E& cout $end
$var wire 1 F& and2out $end
$var wire 1 G& and1out $end
$scope module w_and1 $end
$var wire 1 @& i1 $end
$var wire 1 A& i2 $end
$var wire 1 G& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 B& i1 $end
$var wire 1 F& o $end
$var wire 1 C& i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 G& i1 $end
$var wire 1 F& i2 $end
$var wire 1 E& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 @& i1 $end
$var wire 1 A& i2 $end
$var wire 1 C& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 C& i1 $end
$var wire 1 B& i2 $end
$var wire 1 D& o $end
$upscope $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 H& a $end
$var wire 1 I& b $end
$var wire 1 J& xorout $end
$var wire 1 K& result $end
$var wire 1 L& cout $end
$var wire 1 B c $end
$var wire 1 M& and2out $end
$var wire 1 N& and1out $end
$scope module w_and1 $end
$var wire 1 H& i1 $end
$var wire 1 I& i2 $end
$var wire 1 N& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 M& o $end
$var wire 1 J& i2 $end
$var wire 1 B i1 $end
$upscope $end
$scope module w_or $end
$var wire 1 N& i1 $end
$var wire 1 M& i2 $end
$var wire 1 L& o $end
$upscope $end
$scope module w_xor $end
$var wire 1 H& i1 $end
$var wire 1 I& i2 $end
$var wire 1 J& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 J& i1 $end
$var wire 1 K& o $end
$var wire 1 B i2 $end
$upscope $end
$upscope $end
$scope module fa31 $end
$var wire 1 O& a $end
$var wire 1 P& b $end
$var wire 1 Q& c $end
$var wire 1 R& xorout $end
$var wire 1 S& result $end
$var wire 1 F cout $end
$var wire 1 T& and2out $end
$var wire 1 U& and1out $end
$scope module w_and1 $end
$var wire 1 O& i1 $end
$var wire 1 P& i2 $end
$var wire 1 U& o $end
$upscope $end
$scope module w_and2 $end
$var wire 1 Q& i1 $end
$var wire 1 T& o $end
$var wire 1 R& i2 $end
$upscope $end
$scope module w_or $end
$var wire 1 U& i1 $end
$var wire 1 T& i2 $end
$var wire 1 F o $end
$upscope $end
$scope module w_xor $end
$var wire 1 O& i1 $end
$var wire 1 P& i2 $end
$var wire 1 R& o $end
$upscope $end
$scope module w_xor2 $end
$var wire 1 R& i1 $end
$var wire 1 Q& i2 $end
$var wire 1 S& o $end
$upscope $end
$upscope $end
$upscope $end
$scope module b_inverter $end
$var wire 32 V& b [31:0] $end
$var wire 32 W& o [31:0] $end
$var wire 32 X& a [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 Y& i $end
$scope module w_xor $end
$var wire 1 Z& i1 $end
$var wire 1 [& i2 $end
$var wire 1 \& o $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 ]& i $end
$scope module w_xor $end
$var wire 1 ^& i1 $end
$var wire 1 _& i2 $end
$var wire 1 `& o $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 a& i $end
$scope module w_xor $end
$var wire 1 b& i1 $end
$var wire 1 c& i2 $end
$var wire 1 d& o $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 e& i $end
$scope module w_xor $end
$var wire 1 f& i1 $end
$var wire 1 g& i2 $end
$var wire 1 h& o $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 i& i $end
$scope module w_xor $end
$var wire 1 j& i1 $end
$var wire 1 k& i2 $end
$var wire 1 l& o $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 m& i $end
$scope module w_xor $end
$var wire 1 n& i1 $end
$var wire 1 o& i2 $end
$var wire 1 p& o $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 q& i $end
$scope module w_xor $end
$var wire 1 r& i1 $end
$var wire 1 s& i2 $end
$var wire 1 t& o $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 u& i $end
$scope module w_xor $end
$var wire 1 v& i1 $end
$var wire 1 w& i2 $end
$var wire 1 x& o $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 y& i $end
$scope module w_xor $end
$var wire 1 z& i1 $end
$var wire 1 {& i2 $end
$var wire 1 |& o $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 }& i $end
$scope module w_xor $end
$var wire 1 ~& i1 $end
$var wire 1 !' i2 $end
$var wire 1 "' o $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 #' i $end
$scope module w_xor $end
$var wire 1 $' i1 $end
$var wire 1 %' i2 $end
$var wire 1 &' o $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 '' i $end
$scope module w_xor $end
$var wire 1 (' i1 $end
$var wire 1 )' i2 $end
$var wire 1 *' o $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 +' i $end
$scope module w_xor $end
$var wire 1 ,' i1 $end
$var wire 1 -' i2 $end
$var wire 1 .' o $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 /' i $end
$scope module w_xor $end
$var wire 1 0' i1 $end
$var wire 1 1' i2 $end
$var wire 1 2' o $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 3' i $end
$scope module w_xor $end
$var wire 1 4' i1 $end
$var wire 1 5' i2 $end
$var wire 1 6' o $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 7' i $end
$scope module w_xor $end
$var wire 1 8' i1 $end
$var wire 1 9' i2 $end
$var wire 1 :' o $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 ;' i $end
$scope module w_xor $end
$var wire 1 <' i1 $end
$var wire 1 =' i2 $end
$var wire 1 >' o $end
$upscope $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 ?' i $end
$scope module w_xor $end
$var wire 1 @' i1 $end
$var wire 1 A' i2 $end
$var wire 1 B' o $end
$upscope $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 C' i $end
$scope module w_xor $end
$var wire 1 D' i1 $end
$var wire 1 E' i2 $end
$var wire 1 F' o $end
$upscope $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 G' i $end
$scope module w_xor $end
$var wire 1 H' i1 $end
$var wire 1 I' i2 $end
$var wire 1 J' o $end
$upscope $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 K' i $end
$scope module w_xor $end
$var wire 1 L' i1 $end
$var wire 1 M' i2 $end
$var wire 1 N' o $end
$upscope $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 O' i $end
$scope module w_xor $end
$var wire 1 P' i1 $end
$var wire 1 Q' i2 $end
$var wire 1 R' o $end
$upscope $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 S' i $end
$scope module w_xor $end
$var wire 1 T' i1 $end
$var wire 1 U' i2 $end
$var wire 1 V' o $end
$upscope $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 W' i $end
$scope module w_xor $end
$var wire 1 X' i1 $end
$var wire 1 Y' i2 $end
$var wire 1 Z' o $end
$upscope $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 [' i $end
$scope module w_xor $end
$var wire 1 \' i1 $end
$var wire 1 ]' i2 $end
$var wire 1 ^' o $end
$upscope $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 _' i $end
$scope module w_xor $end
$var wire 1 `' i1 $end
$var wire 1 a' i2 $end
$var wire 1 b' o $end
$upscope $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 c' i $end
$scope module w_xor $end
$var wire 1 d' i1 $end
$var wire 1 e' i2 $end
$var wire 1 f' o $end
$upscope $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 g' i $end
$scope module w_xor $end
$var wire 1 h' i1 $end
$var wire 1 i' i2 $end
$var wire 1 j' o $end
$upscope $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 k' i $end
$scope module w_xor $end
$var wire 1 l' i1 $end
$var wire 1 m' i2 $end
$var wire 1 n' o $end
$upscope $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 o' i $end
$scope module w_xor $end
$var wire 1 p' i1 $end
$var wire 1 q' i2 $end
$var wire 1 r' o $end
$upscope $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 s' i $end
$scope module w_xor $end
$var wire 1 t' i1 $end
$var wire 1 u' i2 $end
$var wire 1 v' o $end
$upscope $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 w' i $end
$scope module w_xor $end
$var wire 1 x' i1 $end
$var wire 1 y' i2 $end
$var wire 1 z' o $end
$upscope $end
$upscope $end
$upscope $end
$scope module lf $end
$var wire 32 {' a [31:0] $end
$var wire 32 |' b [31:0] $end
$var wire 3 }' logicidx [2:0] $end
$var wire 1 ? active $end
$var reg 32 ~' o [31:0] $end
$upscope $end
$upscope $end
$scope module armodule $end
$var wire 1 G abe $end
$var wire 1 K ale $end
$var wire 32 !( alubus [31:0] $end
$var wire 1 w clk $end
$var reg 32 "( addressregister [31:0] $end
$var reg 32 #( incrementerbus [31:0] $end
$upscope $end
$scope module clkmodule $end
$var wire 1 V active $end
$var reg 1 ; c1 $end
$var reg 1 : c2 $end
$var integer 32 $( phase [31:0] $end
$upscope $end
$scope module decodermodule $end
$var wire 1 v clk $end
$var wire 32 %( instruction [31:0] $end
$var wire 1 Z isactive $end
$var reg 4 &( Rd [3:0] $end
$var reg 4 '( Rm [3:0] $end
$var reg 4 (( Rn [3:0] $end
$var reg 4 )( Rs [3:0] $end
$var reg 1 *( S $end
$var reg 1 5 S_on $end
$var reg 1 4 abe $end
$var reg 1 3 ale $end
$var reg 1 B alu_cin $end
$var reg 1 2 alu_hot $end
$var reg 4 +( cond [3:0] $end
$var reg 1 1 immediate_shift $end
$var reg 2 ,( indicator [1:0] $end
$var reg 1 A invert_a $end
$var reg 1 @ invert_b $end
$var reg 1 ( is_immediate $end
$var reg 1 ? islogic $end
$var reg 3 -( logicidx [2:0] $end
$var reg 4 .( mode [3:0] $end
$var reg 3 /( mul [2:0] $end
$var reg 1 / mult_hot $end
$var reg 4 0( opcode [3:0] $end
$var reg 12 1( operand2 [11:0] $end
$var reg 1 2( operandmode $end
$var reg 1 . pc_w $end
$var reg 1 - reg_w $end
$var reg 5 3( shifter_count [4:0] $end
$var reg 3 4( shifter_mode [2:0] $end
$var reg 2 5( special_input [1:0] $end
$upscope $end
$scope module memorymodule $end
$var wire 32 6( address [31:0] $end
$var wire 1 v clk1 $end
$var wire 1 w clk2 $end
$var wire 32 7( mask [31:0] $end
$var wire 1 h w $end
$var wire 32 8( write [31:0] $end
$var reg 32 9( read [31:0] $end
$var integer 32 :( i [31:0] $end
$upscope $end
$scope module multipliermodule $end
$var wire 32 ;( m1 [31:0] $end
$var wire 32 <( m2 [31:0] $end
$var reg 64 =( o [63:0] $end
$upscope $end
$scope module rbmodule $end
$var wire 5 >( address1 [4:0] $end
$var wire 5 ?( address2 [4:0] $end
$var wire 5 @( address3 [4:0] $end
$var wire 1 v clk1 $end
$var wire 1 w clk2 $end
$var wire 32 A( cpsr_mask [31:0] $end
$var wire 1 X cpsr_w $end
$var wire 32 B( cpsr_write [31:0] $end
$var wire 1 r is_active $end
$var wire 1 m pc_increment $end
$var wire 1 n pc_w $end
$var wire 32 C( pc_write [31:0] $end
$var wire 1 p w $end
$var wire 32 D( write [31:0] $end
$var reg 32 E( pc_read [31:0] $end
$var reg 32 F( read1 [31:0] $end
$var reg 32 G( read2 [31:0] $end
$var reg 32 H( read3 [31:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 I( i [31:0] $end
$upscope $end
$upscope $end
$scope module shiftermodule $end
$var wire 5 J( count [4:0] $end
$var wire 32 K( i [31:0] $end
$var wire 3 L( mode [2:0] $end
$var reg 32 M( o [31:0] $end
$var reg 32 N( tmp [31:0] $end
$var integer 32 O( counter [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 w'
b11110 s'
b11101 o'
b11100 k'
b11011 g'
b11010 c'
b11001 _'
b11000 ['
b10111 W'
b10110 S'
b10101 O'
b10100 K'
b10011 G'
b10010 C'
b10001 ?'
b10000 ;'
b1111 7'
b1110 3'
b1101 /'
b1100 +'
b1011 ''
b1010 #'
b1001 }&
b1000 y&
b111 u&
b110 q&
b101 m&
b100 i&
b11 e&
b10 a&
b1 ]&
b0 Y&
b11110 ?&
b11101 6&
b11100 -&
b11011 $&
b11010 y%
b11001 p%
b11000 g%
b10111 ^%
b10110 U%
b10101 L%
b10100 C%
b10011 :%
b10010 1%
b10001 (%
b10000 }$
b1111 t$
b1110 k$
b1101 b$
b1100 Y$
b1011 P$
b1010 G$
b1001 >$
b1000 5$
b111 ,$
b110 #$
b101 x#
b100 o#
b11 f#
b10 ]#
b1 T#
b11111 L#
b11110 H#
b11101 D#
b11100 @#
b11011 <#
b11010 8#
b11001 4#
b11000 0#
b10111 ,#
b10110 (#
b10101 $#
b10100 ~"
b10011 z"
b10010 v"
b10001 r"
b10000 n"
b1111 j"
b1110 f"
b1101 b"
b1100 ^"
b1011 Z"
b1010 V"
b1001 R"
b1000 N"
b111 J"
b110 F"
b101 B"
b100 >"
b11 :"
b10 6"
b1 2"
b0 ."
$end
#0
$dumpvars
bx O(
bx N(
bx M(
bx L(
bx K(
bx J(
b100101 I(
bx H(
bx G(
bx F(
bx E(
bx D(
bx C(
bx B(
bx A(
bx @(
bx ?(
bx >(
bx =(
bx <(
bx ;(
b10000000000 :(
bx 9(
bx 8(
bx 7(
bx 6(
bx 5(
bx 4(
bx 3(
x2(
bx 1(
bx 0(
bx /(
bx .(
bx -(
bx ,(
bx +(
x*(
bx )(
bx ((
bx '(
bx &(
bx %(
b0 $(
bx #(
bx "(
bx !(
bx ~'
bx }'
bx |'
bx {'
xz'
1y'
xx'
xv'
1u'
xt'
xr'
1q'
xp'
xn'
1m'
xl'
xj'
1i'
xh'
xf'
1e'
xd'
xb'
1a'
x`'
x^'
1]'
x\'
xZ'
1Y'
xX'
xV'
1U'
xT'
xR'
1Q'
xP'
xN'
1M'
xL'
xJ'
1I'
xH'
xF'
1E'
xD'
xB'
1A'
x@'
x>'
1='
x<'
x:'
19'
x8'
x6'
15'
x4'
x2'
11'
x0'
x.'
1-'
x,'
x*'
1)'
x('
x&'
1%'
x$'
x"'
1!'
x~&
x|&
1{&
xz&
xx&
1w&
xv&
xt&
1s&
xr&
xp&
1o&
xn&
xl&
1k&
xj&
xh&
1g&
xf&
xd&
1c&
xb&
x`&
1_&
x^&
x\&
1[&
xZ&
bx X&
bx W&
b11111111111111111111111111111111 V&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
xz%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xo%
xn%
xm%
xl%
xk%
xj%
xi%
xh%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x]%
x\%
x[%
xZ%
xY%
xX%
xW%
xV%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xK%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x0%
x/%
x.%
x-%
x,%
x+%
x*%
x)%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x|$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xH$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x=$
x<$
x;$
x:$
x9$
x8$
x7$
x6$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
xy#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
bxz S#
bx R#
bx Q#
bx P#
xO#
1N#
xM#
xK#
1J#
xI#
xG#
1F#
xE#
xC#
1B#
xA#
x?#
1>#
x=#
x;#
1:#
x9#
x7#
16#
x5#
x3#
12#
x1#
x/#
1.#
x-#
x+#
1*#
x)#
x'#
1&#
x%#
x##
1"#
x!#
x}"
1|"
x{"
xy"
1x"
xw"
xu"
1t"
xs"
xq"
1p"
xo"
xm"
1l"
xk"
xi"
1h"
xg"
xe"
1d"
xc"
xa"
1`"
x_"
x]"
1\"
x["
xY"
1X"
xW"
xU"
1T"
xS"
xQ"
1P"
xO"
xM"
1L"
xK"
xI"
1H"
xG"
xE"
1D"
xC"
xA"
1@"
x?"
x="
1<"
x;"
x9"
18"
x7"
x5"
14"
x3"
x1"
10"
x/"
bx -"
b11111111111111111111111111111111 ,"
bx +"
bx *"
bx )"
bx ("
b11111111111111111111111111111111 '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
b0 {
b0 z
0y
0x
xw
xv
bx u
bx t
0s
xr
bx q
xp
bx o
xn
0m
b11111111111111111111111111111111 l
bx k
bx j
bx i
xh
bx g
0f
bx e
bx d
bx c
bx b
0a
bx `
0_
0^
0]
0\
0[
0Z
bx Y
xX
bx W
0V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
0M
xL
xK
bx J
bx I
bx H
xG
xF
xE
xD
xC
xB
xA
x@
x?
bx >
bx =
bx <
x;
x:
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
x2
x1
bx 0
x/
x.
x-
bx ,
bx +
bx *
bx )
x(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1000
1w
1p
b101 q
b101 D(
b0 H
b0 >(
1r
#1005
1f
#1010
0f
b11 q
b11 D(
b1 H
b1 >(
1w
#1015
1f
#1020
0f
b1111 q
b1111 D(
b10 H
b10 >(
1p
1w
#1025
1f
#1030
0f
1h
b10100100000000000000001111 i
b10100100000000000000001111 8(
b0 e
b0 6(
b10100100000000000000001111 b
b10100100000000000000001111 %(
0r
0p
1w
#1035
1f
#1040
0f
b100100000000000100010001 i
b100100000000000100010001 8(
b100 e
b100 6(
b100100000000000100010001 b
b100100000000000100010001 %(
1w
#1045
1f
#1050
0f
b100000000000100110001 i
b100000000000100110001 8(
b1000 e
b1000 6(
b100000000000100110001 b
b100000000000100110001 %(
1w
#1055
1f
#1060
0f
b1000000010000010010001 i
b1000000010000010010001 8(
b1100 e
b1100 6(
b1000000010000010010001 b
b1000000010000010010001 %(
1w
#1065
1f
#1070
0f
0h
1V
1x
b0 b
b0 %(
xw
#1075
1f
#1080
b1000000010000010010001 '
b1000000010000010010001 9(
1v
b1 $(
1;
#1090
b0 %
b0 E(
1m
#1095
b10100100000000000000001111 '
b10100100000000000000001111 9(
b0 e
b0 6(
#1096
1_
0m
b10100100000000000000001111 b
b10100100000000000000001111 %(
#1120
b10 $(
#1160
b11 $(
#1200
b100 $(
#1240
b101 $(
#1280
b110 $(
#1320
b111 $(
#1360
b1000 $(
#1400
0v
b1001 $(
0;
#1440
b1010 $(
#1480
0f
1w
b1011 $(
1:
#1485
1f
#1520
b1100 $(
#1560
b1101 $(
#1600
b1110 $(
#1640
b1111 $(
#1680
b10000 $(
#1720
b10001 $(
#1760
b10010 $(
#1800
0w
b10011 $(
0:
#1840
b10100 $(
#1880
b0 $(
#1920
0M&
15
11
1(
b0 ,
b0 3(
b100 +
b100 4(
1-
0B
b0 >
b0 }
b0 }'
b0 -(
0?
0@
0A
b0 0
b0 .(
0/
b1111 1(
b0 9
b0 &(
b0 7
b0 ((
1*(
b100 0(
12(
b0 ,(
b0 +(
b0 *
b0 5(
12
1Z
b10100100000000000000001111 c
1v
b1 $(
1;
#1922
b10100100000000000000001111 d
b0 S
b0 Q
b0 O
1\
b0 `
0[
0Z
#1925
b101 $
b101 F(
b0 H
b0 >(
1r
#1930
1z'
1v'
1r'
1n'
1j'
1f'
1b'
1^'
1Z'
1V'
1R'
1N'
1J'
1F'
1B'
1>'
1:'
16'
12'
1.'
1*'
1&'
1"'
1|&
1x&
1t&
1p&
1l&
0h&
0d&
0`&
b11111111111111111111111111110000 !"
b11111111111111111111111111110000 W&
0\&
01"
15"
09"
1="
1A"
1E"
1I"
1M"
1Q"
1U"
1Y"
1]"
1a"
1e"
1i"
1m"
1q"
1u"
1y"
1}"
1##
1'#
1+#
1/#
13#
17#
1;#
1?#
1C#
1G#
1K#
b11111111111111111111111111111010 ""
b11111111111111111111111111111010 -"
1O#
0x'
0t'
0p'
0l'
0h'
0d'
0`'
0\'
0X'
0T'
0P'
0L'
0H'
0D'
0@'
0<'
08'
04'
00'
0,'
0('
0$'
0~&
0z&
0v&
0r&
0n&
0j&
1f&
1b&
1^&
1Z&
b1111 !
b1111 #"
b1111 X&
b1111 M(
b0 O(
b1111 N(
1/"
03"
17"
0;"
0?"
0C"
0G"
0K"
0O"
0S"
0W"
0["
0_"
0c"
0g"
0k"
0o"
0s"
0w"
0{"
0!#
0%#
0)#
0-#
01#
05#
09#
0=#
0A#
0E#
0I#
0M#
b100 %
b100 E(
b100 u
b100 L(
b0 t
b0 J(
b1111 U
b1111 K(
b101 T
b101 |
b101 +"
1m
#1935
b100100000000000100010001 '
b100100000000000100010001 9(
0r
b100 e
b100 6(
#1936
0m
b100100000000000100010001 b
b100100000000000100010001 %(
#1940
1L
0\
1s
#1955
1t#
1b#
0}#
0($
01$
0:$
0C$
0L$
0U$
0^$
0g$
0p$
0y$
0$%
0-%
06%
0?%
0H%
0Q%
0Z%
0c%
0l%
0u%
0~%
0)&
02&
0;&
0D&
0S&
0k#
1r#
1`#
0Y#
1l#
0{#
0&$
0/$
08$
0A$
0J$
0S$
0\$
0e$
0n$
0w$
0"%
0+%
04%
0=%
0F%
0O%
0X%
0a%
0j%
0s%
0|%
0'&
00&
09&
0B&
0Q&
1Z#
b10100 $"
b10100 R#
0K&
0d#
1m#
0u#
0~#
0)$
02$
0;$
0D$
0M$
0V$
0_$
0h$
0q$
0z$
0%%
0.%
07%
0@%
0I%
0R%
0[%
0d%
0m%
0v%
0!&
0*&
03&
0<&
0E&
1[#
0F
1X#
1i#
0a#
1j#
0v#
0!$
0*$
03$
0<$
0E$
0N$
0W$
0`$
0i$
0r$
0{$
0&%
0/%
08%
0A%
0J%
0S%
0\%
0e%
0n%
0w%
0"&
0+&
04&
0=&
0F&
1W#
0J&
0T&
1c#
0s#
0|#
0'$
00$
09$
0B$
0K$
0T$
0]$
0f$
0o$
0x$
0#%
0,%
05%
0>%
0G%
0P%
0Y%
0b%
0k%
0t%
0}%
0(&
01&
0:&
0C&
b1111z S#
1L&
0R&
0\#
1e#
0n#
0w#
0"$
0+$
04$
0=$
0F$
0O$
0X$
0a$
0j$
0s$
0|$
0'%
00%
09%
0B%
0K%
0T%
0]%
0f%
0o%
0x%
0#&
0,&
05&
0>&
0G&
1N&
0U&
1V#
1_#
1h#
0q#
0z#
0%$
0.$
07$
0@$
0I$
0R$
0[$
0d$
0m$
0v$
0!%
0*%
03%
0<%
0E%
0N%
0W%
0`%
0i%
0r%
0{%
0&&
0/&
08&
0A&
1I&
0P&
0U#
1^#
0g#
0p#
0y#
0$$
0-$
06$
0?$
0H$
0Q$
0Z$
0c$
0l$
0u$
0~$
0)%
02%
0;%
0D%
0M%
0V%
0_%
0h%
0q%
0z%
0%&
0.&
07&
0@&
1H&
0O&
b1111 )"
b1111 |'
b1111 &"
b1111 Q#
b101 ("
b101 {'
b101 %"
b101 P#
#1960
b10 $(
#1970
b10100 =
b10100 *"
#1975
1D
0E
0C
#1976
b10100 q
b10100 D(
0L
#1981
1M
#2000
b11 $(
#2040
b100 $(
#2080
b101 $(
#2120
b110 $(
#2160
b111 $(
#2200
b1000 $(
#2240
0v
b1001 $(
0;
#2280
b1010 $(
#2320
1p
0f
1w
b1011 $(
1:
#2325
1f
#2330
1X
b11111111111111111111111111111111 W
b11111111111111111111111111111111 A(
b10000000000000000000000000000 Y
b10000000000000000000000000000 B(
0p
#2360
b1100 $(
#2400
b1101 $(
#2440
b1110 $(
#2480
b1111 $(
#2520
b10000 $(
#2560
b10001 $(
#2600
b10010 $(
#2640
0w
b10011 $(
0:
#2680
b10100 $(
#2720
b0 $(
#2760
b1 6
b1 )(
01
b1 8
b1 '(
0(
b10 ,
b10 3(
b0 +
b0 4(
b100010001 1(
02(
1Z
b100100000000000100010001 c
0s
1v
b1 $(
1;
#2762
1a
1[
0Z
#2800
b10 $(
#2840
b11 $(
#2880
b100 $(
#2920
b101 $(
#2960
b110 $(
#3000
b111 $(
#3040
b1000 $(
#3080
0v
b1001 $(
0;
#3120
b1010 $(
#3160
0f
1p
1w
b1011 $(
1:
#3165
1f
#3170
bx `
0a
0p
#3200
b1100 $(
#3240
b1101 $(
#3280
b1110 $(
#3320
b1111 $(
#3360
b10000 $(
#3400
b10001 $(
#3440
b10010 $(
#3480
0w
b10011 $(
0:
#3520
b10100 $(
#3560
b0 $(
#3600
1Z
1v
b1 $(
1;
#3602
b100100000000000100010001 d
0[
b1 R
b1 P
1\
b0 `
0Z
#3605
b11 #
b11 G(
b10100 $
b10100 F(
b1 I
b1 ?(
1r
#3610
1h&
b11111111111111111111111111111100 !"
b11111111111111111111111111111100 W&
1d&
11"
b11111111111111111111111111101011 ""
b11111111111111111111111111101011 -"
0A"
0f&
0b&
b11 !
b11 #"
b11 X&
b11 M(
0/"
1?"
b1000 %
b1000 E(
b0 u
b0 L(
b11 U
b11 K(
b10100 T
b10100 |
b10100 +"
1m
#3615
b100000000000100110001 '
b100000000000100110001 9(
0r
b1000 e
b1000 6(
#3616
0m
b100000000000100110001 b
b100000000000100110001 %(
#3620
1L
0\
1s
#3635
0k#
0}#
1b#
0`#
1Y#
0r#
1t#
0{#
0Z#
b10111 $"
b10111 R#
1K&
0d#
0l#
0u#
0[#
0i#
1a#
0m#
0v#
0W#
1J&
0c#
0j#
1s#
b0z S#
0L&
0e#
0N&
0_#
0h#
1p#
0H&
b11 )"
b11 |'
b11 &"
b11 Q#
b10100 ("
b10100 {'
b10100 %"
b10100 P#
#3640
b10 $(
#3650
b10111 =
b10111 *"
#3656
b10111 q
b10111 D(
0L
#3680
b11 $(
#3720
b100 $(
#3760
b101 $(
#3800
b110 $(
#3840
b111 $(
#3880
b1000 $(
#3920
0v
b1001 $(
0;
#3960
b1010 $(
#4000
0f
1p
1w
b1011 $(
1:
#4005
1f
#4010
0p
#4040
b1100 $(
#4080
b1101 $(
#4120
b1110 $(
#4160
b1111 $(
#4200
b10000 $(
#4240
b10001 $(
#4280
b10010 $(
#4320
0w
b10011 $(
0:
#4360
b10100 $(
#4400
b0 $(
#4440
b0 ~
b0 ~'
b1 +
b1 4(
1?
b100110001 1(
b0 0(
1Z
b100000000000100110001 c
0s
1v
b1 $(
1;
#4442
1a
1[
0Z
#4480
b10 $(
#4520
b11 $(
#4560
b100 $(
#4600
b101 $(
#4640
b110 $(
#4680
b111 $(
#4720
b1000 $(
#4760
0v
b1001 $(
0;
#4800
b1010 $(
#4840
0f
1p
1w
b1011 $(
1:
#4845
1f
#4850
bx `
0a
0p
#4880
b1100 $(
#4920
b1101 $(
#4960
b1110 $(
#5000
b1111 $(
#5040
b10000 $(
#5080
b10001 $(
#5120
b10010 $(
#5160
0w
b10011 $(
0:
#5200
b10100 $(
#5240
b0 $(
#5280
1Z
1v
b1 $(
1;
#5282
b100000000000100110001 d
0[
1\
b0 `
0Z
#5285
b10111 $
b10111 F(
1r
#5290
01"
b11111111111111111111111111101000 ""
b11111111111111111111111111101000 -"
05"
1/"
13"
b1100 %
b1100 E(
b1 u
b1 L(
b10111 T
b10111 |
b10111 +"
1m
#5295
b1000000010000010010001 '
b1000000010000010010001 9(
0r
b1100 e
b1100 6(
#5296
0m
b1000000010000010010001 b
b1000000010000010010001 %(
#5300
1L
0\
1s
#5315
1k#
1i#
0b#
1c#
b11010 $"
b11010 R#
0K&
1d#
1`#
0X#
1W#
0J&
1Z#
b111z S#
1L&
1\#
1N&
b11 ~
b11 ~'
1U#
1H&
b10111 ("
b10111 {'
b10111 %"
b10111 P#
#5320
b10 $(
#5330
b11 =
b11 *"
#5335
0D
#5336
b11 q
b11 D(
0L
#5360
b11 $(
#5400
b100 $(
#5440
b101 $(
#5480
b110 $(
#5520
b111 $(
#5560
b1000 $(
#5600
0v
b1001 $(
0;
#5640
b1010 $(
#5680
0f
1p
1w
b1011 $(
1:
#5685
1f
#5690
b0 Y
b0 B(
0p
#5720
b1100 $(
#5760
b1101 $(
#5800
b1110 $(
#5840
b1111 $(
#5880
b10000 $(
#5920
b10001 $(
#5960
b10010 $(
#6000
0w
b10011 $(
0:
#6040
b10100 $(
#6080
b0 $(
#6120
b10 0
b10 .(
0?
1/
b1 /(
1Z
b1000000010000010010001 c
0s
1v
b1 $(
1;
#6122
b1000000010000010010001 d
b10 S
1\
0[
0Z
#6125
b1111 "
b1111 H(
b11 $
b11 F(
b10 J
b10 @(
b0 I
b0 ?(
b1 H
b1 >(
1r
#6130
19"
b11111111111111111111111111111100 ""
b11111111111111111111111111111100 -"
1A"
07"
0?"
b10000 %
b10000 E(
0r
b11 T
b11 |
b11 +"
1m
#6135
b1001 &
b1001 =(
b11 k
b11 <(
b11 j
b11 ;(
b0 '
b0 9(
0\
1s
b10000 e
b10000 6(
#6136
0m
b0 b
b0 %(
#6140
0h&
b11111111111111111111111111110110 !"
b11111111111111111111111111110110 W&
1`&
09"
b11111111111111111111111111110000 ""
b11111111111111111111111111110000 -"
0="
1f&
0^&
b1001 !
b1001 #"
b1001 X&
b1001 M(
17"
1;"
b0 u
b0 L(
b1001 U
b1001 K(
b1111 T
b1111 |
b1111 +"
#6145
1L
#6160
1i#
0b#
0Y#
1c#
1k#
1d#
1[#
b11000 $"
b11000 R#
1t#
1`#
1X#
1r#
0m#
1Z#
b1111z S#
1l#
0j#
0s#
0\#
1n#
0V#
1h#
1g#
0p#
b1001 )"
b1001 |'
b1001 &"
b1001 Q#
b1111 ("
b1111 {'
b1111 %"
b1111 P#
b10 $(
#6175
b11000 =
b11000 *"
#6180
1D
#6181
b11000 q
b11000 D(
0L
#6200
b11 $(
#6240
b100 $(
#6280
b101 $(
#6320
b110 $(
#6360
b111 $(
#6400
b1000 $(
#6440
0v
b1001 $(
0;
#6480
b1010 $(
#6520
0f
1p
1w
b1011 $(
1:
#6525
1f
#6530
b10000000000000000000000000000 Y
b10000000000000000000000000000 B(
0p
#6560
b1100 $(
#6600
b1101 $(
#6640
b1110 $(
#6680
b1111 $(
#6720
b10000 $(
#6760
b10001 $(
#6800
b10010 $(
#6840
0w
b10011 $(
0:
#6880
b10100 $(
#6920
b0 $(
#6960
1[
1]
b0 c
0s
1v
b1 $(
1;
#7000
b10 $(
#7040
b11 $(
#7080
b100 $(
#7120
b101 $(
#7160
b110 $(
#7200
b111 $(
#7240
b1000 $(
#7280
0v
b1001 $(
0;
#7320
b1010 $(
#7360
0f
1p
1w
b1011 $(
1:
#7365
1f
#7370
0p
